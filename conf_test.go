/*
 * @Author: ww
 * @Date: 2022-07-03 17:35:13
 * @Description:
 * @FilePath: /goconf/conf_test.go
 */
package goconf

import (
	"fmt"
	"testing"
)

type AutoGenerated struct {
	Metadata     Metadata  `yaml:"metadata"`
	Abc          []Abc     `yaml:"abc"`
	Array1       []string  `yaml:"array1"`
	Array2       []int     `yaml:"array2"`
	Array3       []float64 `yaml:"array3"`
	IsUnderscore bool      `yaml:"is_underscore"`
	Kind         string    `yaml:"kind"`
}

type Nested struct {
	UnderscoreField string    `yaml:"underscore_field"`
	Field1          []float64 `yaml:"field1"`
	Field2          []bool    `yaml:"field2"`
}

type Nested2 struct {
	Nested3 Nested3 `yaml:"nested3"`
}

type Nested3 struct {
	Field1 []int  `yaml:"field1"`
	Fieldt []bool `yaml:"fieldt"`
	Field3 string `yaml:"field3"`
}

type Abc struct {
	Def interface{} `yaml:"def"`
	Abc string      `yaml:"Abc"`
}

type Metadata struct {
	Name         string         `yaml:"name"`
	Nullfield    interface{}    `yaml:"nullfield"`
	Nestedstruct []Nestedstruct `yaml:"nestedstruct"`
	Nested2      []Nested2      `yaml:"nested2"`
}

type Nestedstruct struct {
	Nested Nested `yaml:"nested"`
}

func TestCfgFile_init(t *testing.T) {
	tmp := NewCfgFile()
	x := new(AutoGenerated)
	tmp.ReadAll("./testdata/")
	tmp.Unmarshal4Name("conf.yaml", &x)
	
	fmt.Println(x)
	fmt.Println(tmp.GetValue("firstName"))
}

func TestCfgFileInit(t *testing.T) {
	tmp := NewCfgFile()
	tmp.ReadAll("./testdata")
	v, _ := tmp.GetValue("database", "connection_max")
	fmt.Println(v)
	fmt.Println(v.(int64))
}


